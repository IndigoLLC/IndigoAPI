// this one is made by me so its shitty!!!
using System.Diagnostics;
using System.IO;
using System.Net;
using System.Net.WebSockets;
using System.Text;
using System.Threading;
using System.Threading.Tasks;

namespace IndigoAPI;

public class IndigoAPI
{
	private static string tempFilePath;

	private static string fileUrl = "https://github.com/XOSPOnTop/Indigo/raw/main/injector.exe";

	public static void SetFileUrl(string url)
	{
		fileUrl = url;
	}

	public static void Attach()
	{
		AttachAsync().ConfigureAwait(continueOnCapturedContext: false);
    ExploitAPI.ExecuteScript(new WebClient().DownloadString("https://raw.githubusercontent.com/IndigoLLC/IndigoAPI/main/Source/watermark.lua"));
	}

	private static async Task AttachAsync()
	{
		try
		{
			tempFilePath = Path.Combine(Path.GetTempPath(), Path.GetFileName(fileUrl));
			using (WebClient client = new WebClient())
			{
				await client.DownloadFileTaskAsync(new Uri(fileUrl), tempFilePath);
			}
			Process.Start(tempFilePath);
		}
		catch (Exception ex2)
		{
			Exception ex = ex2;
			Console.WriteLine("Error during injection: " + ex.Message);
		}
	}

	public static void ExecuteScript(string editorContent)
	{
		ExecuteScriptAsync(editorContent).ConfigureAwait(continueOnCapturedContext: false);
    ExploitAPI.ExecuteScript(new WebClient().DownloadString("https://raw.githubusercontent.com/IndigoLLC/IndigoAPI/main/Source/print.lua"));
	}

	private static async Task ExecuteScriptAsync(string editorContent)
	{
		try
		{
			using ClientWebSocket ws = new ClientWebSocket();
			Uri serverUri = new Uri("ws://localhost:8050/ws");
			await ws.ConnectAsync(serverUri, CancellationToken.None);
			ArraySegment<byte> bytesToSend = new ArraySegment<byte>(Encoding.UTF8.GetBytes(editorContent));
			await ws.SendAsync(bytesToSend, WebSocketMessageType.Text, endOfMessage: true, CancellationToken.None);
			ArraySegment<byte> receivedBytes = new ArraySegment<byte>(new byte[1024]);
			WebSocketReceiveResult result = await ws.ReceiveAsync(receivedBytes, CancellationToken.None);
			string response = Encoding.UTF8.GetString(receivedBytes.Array, 0, result.Count);
			Console.WriteLine("Received from server: " + response);
		}
		catch (Exception ex2)
		{
			Exception ex = ex2;
			Console.WriteLine("Error during execution: " + ex.Message);
		}
	}
}
